name: CI
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout du code
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Configuration de Node.js (version 20 LTS) + pnpm
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      # 3. Installation des d√©pendances (avec cache)
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 4. Cache Next.js (optimisation des builds)
      - name: Cache Next.js
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            ~/.cache/Cypress
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-v1
          restore-keys: |
            ${{ runner.os }}-nextjs-

      # 5. Linting (ESLint)
      - name: Lint
        run: pnpm lint

      # 6. TypeCheck (avec Prisma)
      - name: Generate Prisma Client
        run: pnpm exec prisma generate

      - name: Typecheck
        run: pnpm exec tsc --noEmit

      # 7. Build Next.js (validation de la production)
      - name: Build
        run: pnpm build

      # 8. Tests Vitest (avec rapport verbeux)
      - name: Run tests
        run: pnpm exec vitest run --reporter verbose

      # 9. (Optionnel) Rapport de couverture
      - name: Coverage report
        if: success()
        run: pnpm exec vitest run --coverage
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Typecheck
        run: npm run typecheck

      - name: Run tests (Vitest)
        run: npm run test:ci

      - name: Coverage report
        if: success()
        run: npm run test:coverage
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Cache Next.js .next/cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-v1
          restore-keys: |
            ${{ runner.os }}-nextjs-
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint --if-present
      - name: Typecheck
        run: npm run typecheck --if-present
      - name: Run tests
        run: npm test
